version: 2.0

references:
  deploy_container_config: &deploy_container_config
    docker:
    - image: ${ECR_ENDPOINT}/cloud-platform/tools:circleci
      environment:
        GITHUB_TEAM_NAME_SLUG: laa-great-ideas

  decrypt_secrets: &decrypt_secrets
    run:
      name: Decrypt secrets file
      command: |
        echo "${GIT_CRYPT_KEY}" | base64 -d > git-crypt.key
        git-crypt unlock git-crypt.key

  build_containers_config: &build_container_config
    docker:
    - image: circleci/ruby:2.6.0-node-browsers
      environment:
        GITHUB_TEAM_NAME_SLUG: laa-great-ideas
    - image: circleci/postgres:10.5-alpine-ram

  setup_test_env: &setup_test_env
    run:
      name: Setup aws on debian environment
      command: |
        sudo apt-get --assume-yes install python3-pip
        sudo pip3 install awscli
        $(aws ecr get-login --region eu-west-1 --no-include-email)

  build_docker_image: &build_docker_image
    run:
      name: Build laa-great-ideas docker image
      command: docker build -t app .

  push_to_ecr: &push_to_ecr
    run:
      name: Push image to ecr repo
      command: |
        docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
        docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
        if [ "${CIRCLE_BRANCH}" == "master" ]; then
          docker tag app "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:latest"
          docker push "${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}:latest"
        fi

jobs:
  build_and_test:
    <<: *build_container_config
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - *setup_test_env
    - restore_cache:
        keys:
          - laa-great-ideas-v1-{{ checksum "Gemfile.lock" }}
          - laa-great-ideas-v1

    - run:
        name: Bundle Install
        command: bundle check --path vendor/bundle || bundle install --path vendor/bundle

      # Store bundle cache
    - save_cache:
        key: laa-great-ideas-v1-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle
    - run: sudo apt install -y postgresql-client || true
    - run:
        name: Database Setup
        command: |
          bundle exec rake db:setup
          bundle exec rake db:migrate
    - run:
        name: Install NPM packages
        command: npm install
    - run:
        name: Run Tests
        command: bundle exec rake
        environment:
    - *build_docker_image
    - *push_to_ecr

  deploy_uat:
    <<: *deploy_container_config
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Kubectl deployment setup uat
        command: |
          $(aws ecr get-login --region eu-west-1 --no-include-email)
          setup-kube-auth
          kubectl config use-context uat
    - *decrypt_secrets
    - deploy:
        name: Helm deployment to uat
        command: |
          helm upgrade ${APPLICATION_DEPLOY_NAME} ./helm_deploy/laa-great-ideas/. \
                        --install --wait \
                        --tiller-namespace=${KUBE_ENV_UAT_NAMESPACE} \
                        --namespace=${KUBE_ENV_UAT_NAMESPACE} \
                        --values ./helm_deploy/laa-great-ideas/values-uat.yaml \
                        --set image.repository="${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}" \
                        --set image.tag="${CIRCLE_SHA1}" \
                        --set replicaCount="1"

  deploy_staging:
    <<: *deploy_container_config
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Kubectl deployment setup staging
        command: |
          $(aws ecr get-login --region eu-west-1 --no-include-email)
          setup-kube-auth
          kubectl config use-context staging
    - *decrypt_secrets
    - deploy:
        name: Helm deployment to staging
        command: |
          helm upgrade ${APPLICATION_DEPLOY_NAME} ./helm_deploy/laa-great-ideas/. \
                        --install --wait \
                        --tiller-namespace=${KUBE_ENV_STAGING_NAMESPACE} \
                        --namespace=${KUBE_ENV_STAGING_NAMESPACE} \
                        --values ./helm_deploy/laa-great-ideas/values-staging.yaml \
                        --set image.repository="${ECR_ENDPOINT}/${GITHUB_TEAM_NAME_SLUG}/${CIRCLE_PROJECT_REPONAME}" \
                        --set image.tag="latest" \
                        --set replicaCount="1"

workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build_and_test
    - hold_uat:
        type: approval
        requires:
        - build_and_test
    - deploy_uat:
        requires:
        - hold_uat
    - hold_staging:
        type: approval
        requires:
        - deploy_uat
        filters:
          branches:
            only: master
    - deploy_staging:
        requires:
        - hold_staging
        filters:
          branches:
            only: master
